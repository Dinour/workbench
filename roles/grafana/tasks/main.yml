---
- name: Ensure Prometheus Volume Exist
  docker_volume:
    name: prometheus
    state: present
  notify: restart prometheus
  tags:
    - prometheus
    - grafana

- import_tasks: "{{role_path}}/tasks/node_exporter.yml"
  tags:
    - node-exporter
    - prometheus
    - grafana

- import_tasks: "{{role_path}}/tasks/alert_manager.yml"
  tags:
    - alertmanager
    - prometheus
    - grafana

- import_tasks: "{{role_path}}/tasks/cadvisor.yml"
  tags:
    - cadvisor
    - prometheus
    - grafana

- import_tasks: "{{role_path}}/tasks/prometheus.yml"
  tags:
    - prometheus
    - grafana

- import_tasks: roles/postgres/tasks/database_manager.yml
  vars:
    database_name: "{{grafana_database}}"
    database_user: "{{grafana_database_user}}"
    database_password: "{{grafana_database_password}}"
  tags: grafana
  no_log: true

- name: Create Grafana Docker Container
  docker_container:
    name: grafana
    image: "grafana/grafana:{{grafana_stack_version}}"
    pull: yes
    hostname: grafana
    restart_policy: unless-stopped
    networks:
      - name: proxy
    networks_cli_compatible: yes
    state: started
    user: "104"
    env:
      GF_SERVER_ROOT_URL: "http://dashboard.{{project_tld}}"
      GF_SECURITY_ADMIN_USER: "{{grafana_user}}"
      GF_SECURITY_ADMIN_PASSWORD: "{{grafana_user_password}}"
      GF_DATABASE_HOST: "database:5432"
      GF_DATABASE_NAME: "{{grafana_database}}"
      GF_DATABASE_TYPE: "postgres"
      GF_DATABASE_PASSWORD: "{{grafana_database_password}}"
      GF_DATABASE_USER: "{{grafana_database_user}}"
      GF_SMTP_ENABLED: "true"
      GF_SMTP_HOST: "{{email_host}}:{{email_port}}"
      GF_SMTP_USER: "{{email_user}}"
      GF_SMTP_PASSWORD: "{{email_password}}"
      GF_SMTP_FROM_ADDRESS: "{{email_user}}"
      GF_INSTALL_PLUGINS: "grafana-piechart-panel"
    labels:
      traefik.http.routers.grafana.entrypoints: "websecure"
      traefik.http.routers.grafana.tls: "true"
      traefik.http.routers.grafana.rule: "Host(`dashboard.{{project_tld}}`)"
      traefik.http.routers.grafana.service: "grafana"
      traefik.http.services.grafana.loadbalancer.server.port: "3000"
      traefik.enable: "true"
  tags: grafana
